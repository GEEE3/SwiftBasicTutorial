// by geee3, March 15, 2023

import UIKit

/*
 Swift 처음 시작하기
 
 2장에서는 Swift 프로그래밍을 시작하기 전 알아야 할 몇 가지 규칙을 설명합니다.
 */

/*
 기본 명명 규칙
 
 변수, 상수, 함수, 메서드, 타입 등의 이름은 유니코드에서 지원하는 어떤 문자(한글, 한자,
 영문, 숫자, 이모티콘 등등)라도 사용할 수 있습니다. 다만 다음과 같은 예외 경우는 사용할
 수 없습니다.
 - Swift에서 미리 정한 예약어 또는 키워드
 - 연산자로 사용될 수 있는 기호
 - 숫자로 시작하는 이름
 - 공백이 포함된 이름
 - 해당 코드 범위 내에서 미리 사용되는 기존 이름과 동일한 이름
 
 함수, 메서드, 인스턴스 이름은 소문자로 시작하는 소문자 카멜케이스를 사용합니다.
 클래스, 구조체, 익스텐션, 프로토콜, 열거형 이름은 타입의 이름이기 때문에 첫 글자를 대
 문자로 사용하는 대문자 카멜케이스를 사용합니다.
 대소문자를 구별합니다. 예를 들어 Var와 var를 다르게 인식합니다.
 */

/*
 콘솔 로그
 
 프로그램에서 로그란 애플리케이션의 상태 또는 애플리케이션 내부 로직의 흐름을 관찰할 수
 있도록 출력한 정보를 의미합니다. 콘솔 로그는 디버깅 중 디버깅 콘솔에 보여줄 로그를
 뜻합니다. Swift에서는 print() 또는 dump() 함수를 사용하여 콘솔 로그를 출력할
 수 있습니다.
 
 Swift에서는 콘솔 로그를 남기는 용도로 print() 함수를 사용합니다. print() 함수의 기
 본 원형은 public func print(items: Any..., separator: String = default,
 terminator: String = default)로 정의되어 있습니다. 기본적으로 print("Hello
 Swift!")와 같이 사용하면 디버깅 콘솔에서 'Hello Swift!'라는 로그를 확인할 수 있습니다.
 print() 함수는 로그를 출력한 뒤 줄바꿈을 해주기 위해 줄바꿈 문자(\n)를 자동으로 삽입
 해줍니다.
 
 print() 함수는 디버깅 콘솔에 간략한 정보를 출력해주는 반면, dump() 함수는 조금 더
 자세한 정보를 출력해줍니다. print() 함수는 출력하려는 인스턴스의 description
 프로퍼티에 해당하는 내용을 출력해주고, dump() 함수는 출력하려는 인스턴스의 자세한
 내부 콘텐츠까지 출력해줍니다.
 */

struct BasicInformation {
    let name: String
    var age: Int
}

var info = BasicInformation(name: "geee3", age: 27)

print(info)
dump(info)

class Person {
    var height: Float = 0.0
    var weight: Float = 0.0
}

let geee3: Person = Person()
geee3.height = 176.5
geee3.weight = 68.5

print(geee3)
dump(geee3)

/*
 문자열 보간법
 
 문자열 보간법은 변수 또는 상수 등의 값을 문자열 내에 나타내고 싶을 때 사용합니다.
 문자열 내에 \(변수나 상수)의 형태로 표기하면 이를 문자열로 치환해서 넣습니다. 문자
 열 보간법을 이용해 프로그래머가 원하는 문자열로 치환하려면 변수나 상수 타입을
 CustomStringConvertible 프로토콜을 준수하는 description 프로퍼티로 구현
 합니다.
 */

let fruit: String = "apples"
print("I like \(fruit).")

/*
 주석
 
 주석은 프로그램 소스 코드에 정보를 남기는 목적으로 사용합니다. 주로 코드를 다시 봤을 때
 필요한 중요 메모나 다른 프로그래머에게 설명하기 위한 메모 등을 주석으로 남깁니다.
 - 한 줄 주석은 슬래시 두 개를 사용하여 나타냅니다.
 - 여러 줄 주석은 슬래시와 별표를 사용하여 나타냅니다.
 - Swift에서는 여러 줄 주석 안에 여러 줄 주석 또는 한 줄 주석을 넣는 중첩 주석을 지
 원 합니다.
 */

/*
 변수와 상수
 
 우리는 변수나 상수를 이용해 프로그램에서 사용되는 데이터를 메모리에 임시로 저장합니다.
 이때 변수와 상수는 특정 데이터 타입에 해당하는 값의 이름입니다. 변수는 생성 후 데이터값
 을 변경할 수 있지만, 상수는 한번 값을 설정하면 다음에 변경할 수 없습니다.
 
 Swift에서 변수를 생성하려면 var 키워드를 사용합니다. var [변수명]: [데이터 타입]
 = [값]의 형태로 선언합니다. 변수를 생성할 때 데이터 타입은 생략할 수 있습니다. let
 키워드를 사용해서 상수를 생성합니다. let [상수명]: [데이터 타입] = [값]의 형태로
 선언합니다. 상수를 생성할 때에도 데이터 타입을 생략할 수 있습니다.
 */

let name: String = "geee3"
var age: Int = 27
var job = "iOS Programmer"

age = 25
job = "Developer"

print("저의 이름은 \(name)이고, 나이는 \(age)세이며, 직업은 \(job)입니다.")
